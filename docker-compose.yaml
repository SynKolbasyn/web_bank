services:
  database-1:
    hostname: "database-1"
    container_name: "database-1"
    image: "postgres:latest"
    volumes:
      - "./database/:/var/lib/postgresql/data/"
    ports:
      - "5432:5432"
    env_file:
      - ".env"

  kafka-1:
    image: "apache/kafka:latest"
    hostname: "kafka-1"
    container_name: "kafka-1"
    ports:
      - "29092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,CONTROLLER://:9093,PLAINTEXT_HOST://:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-1:19092,PLAINTEXT_HOST://localhost:29092"
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka-2:
    image: "apache/kafka:latest"
    hostname: "kafka-2"
    container_name: "kafka-2"
    ports:
      - "39092:9092"
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,CONTROLLER://:9093,PLAINTEXT_HOST://:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-2:19092,PLAINTEXT_HOST://localhost:39092"
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka-3:
    image: "apache/kafka:latest"
    hostname: "kafka-3"
    container_name: "kafka-3"
    ports:
      - "49092:9092"
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,CONTROLLER://:9093,PLAINTEXT_HOST://:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-3:19092,PLAINTEXT_HOST://localhost:49092"
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  nginx:
    hostname: "nginx"
    container_name: "nginx"
    build:
      args:
        country_name: $COUNTRY_NAME
        state_of_province_name: $STATE_OR_PROVINCE_NAME
        locality_name: $LOCALITY_NAME
        organization_name: $ORGANIZATION_NAME
        organizational_unit_name: $ORGANIZATIONAL_UNIT_NAME
        common_name: $COMMON_NAME
      dockerfile: "nginx/Dockerfile"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - front_end-1
      - front_end-2
      - front_end-3

  front_end-1:
    hostname: "front_end-1"
    container_name: "front_end-1"
    env_file:
      - ".env"
    build:
      args:
        country_name: $COUNTRY_NAME
        state_of_province_name: $STATE_OR_PROVINCE_NAME
        locality_name: $LOCALITY_NAME
        organization_name: $ORGANIZATION_NAME
        organizational_unit_name: $ORGANIZATIONAL_UNIT_NAME
        common_name: $COMMON_NAME
        config: $CONFIG
      dockerfile: "services/front_end/Dockerfile"
    ports:
      - "5001:8080"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3

  front_end-2:
    hostname: "front_end-2"
    container_name: "front_end-2"
    env_file:
      - ".env"
    build:
      args:
        country_name: $COUNTRY_NAME
        state_of_province_name: $STATE_OR_PROVINCE_NAME
        locality_name: $LOCALITY_NAME
        organization_name: $ORGANIZATION_NAME
        organizational_unit_name: $ORGANIZATIONAL_UNIT_NAME
        common_name: $COMMON_NAME
        config: $CONFIG
      dockerfile: "services/front_end/Dockerfile"
    ports:
      - "5002:8080"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3

  front_end-3:
    hostname: "front_end-3"
    container_name: "front_end-3"
    env_file:
      - ".env"
    build:
      args:
        country_name: $COUNTRY_NAME
        state_of_province_name: $STATE_OR_PROVINCE_NAME
        locality_name: $LOCALITY_NAME
        organization_name: $ORGANIZATION_NAME
        organizational_unit_name: $ORGANIZATIONAL_UNIT_NAME
        common_name: $COMMON_NAME
        config: $CONFIG
      dockerfile: "services/front_end/Dockerfile"
    ports:
      - "5003:8080"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3

  login-1:
    hostname: "login-1"
    container_name: "login-1"
    env_file:
      - ".env"
    build:
      dockerfile: "services/login/Dockerfile"

  login-2:
    hostname: "login-2"
    container_name: "login-2"
    env_file:
      - ".env"
    build:
      dockerfile: "services/login/Dockerfile"

  login-3:
    hostname: "login-3"
    container_name: "login-3"
    env_file:
      - ".env"
    build:
      dockerfile: "services/login/Dockerfile"

  register-1:
    hostname: "register-1"
    container_name: "register-1"
    env_file:
      - ".env"
    build:
      dockerfile: "services/register/Dockerfile"

  register-2:
    hostname: "register-2"
    container_name: "register-2"
    env_file:
      - ".env"
    build:
      dockerfile: "services/register/Dockerfile"

  register-3:
    hostname: "register-3"
    container_name: "register-3"
    env_file:
      - ".env"
    build:
      dockerfile: "services/register/Dockerfile"

  transfer-1:
    hostname: "transfer-1"
    container_name: "transfer-1"
    env_file:
      - ".env"
    build:
      dockerfile: "services/transfer/Dockerfile"

  transfer-2:
    hostname: "transfer-2"
    container_name: "transfer-2"
    env_file:
      - ".env"
    build:
      dockerfile: "services/transfer/Dockerfile"

  transfer-3:
    hostname: "transfer-3"
    container_name: "transfer-3"
    env_file:
      - ".env"
    build:
      dockerfile: "services/transfer/Dockerfile"
